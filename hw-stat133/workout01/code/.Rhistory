C<-filter(dat,position=="C")
ggplot(C,aes(x=experience,y=salary))+
geom_smooth(method=loess)
ggplot(
filter(dat,team='GSW'),
aes(x=experience,y=salary))+
geom_point()+
theme_bw()
C<-filter(dat,position=="C")
ggplot(C,aes(x=experience,y=salary))+
geom_smooth(method=loess)
ggplot(
filter(dat,team=='GSW'),
aes(x=experience,y=salary))+
geom_point()+
theme_bw()
ggplot(C,aes(x=experience,y=salary))+
geom_smooth(method=loess)+
theme_gray()
ggplot(C,aes(x=experience,y=salary))+
geom_smooth(method=loess)+
theme_dark()
filter(dat,team=='GSW'),
filter(dat,team=='GSW'),
C<-filter(dat,position=="C")
ggplot(C,aes(x=experience,y=salary))+
geom_smooth(method=loess)+
theme_dark()
ggplot(
filter(dat,team=='GSW'),
aes(x=experience,y=salary))+
geom_point()+
theme_classic()
?dnrom
?dbnrom
?dbnorm
?dnorm
dnorm(40,40,6)
pnorm(40.5,40,6)
pnorm(40.5,40,6)-pnorm(39.5,40,6)
pbinom(40,400,0.1)
pbinom(40.5,400,0.1)
dbinom(40,400,0.1)
# replicate function
sample(6,1) # die roll
replicate(100,sample(6,1)) # 100 die rolls
# Ignore the hist() and abline() commands for now
hist(replicate(1000,sample(6,1)),breaks=seq(0.5,6.5,by=1),prob=T)
abline(h=1/6,col="blue")
# replicate function
sample(6,1) # die roll
replicate(100,sample(6,1)) # 100 die rolls
# replicate function
sample(6,1) # die roll
?sample
library(dplyr)
?sample
sample(100,2)
sample(100,2)
sample(1:100,2)
family=read.csv("~/Desktop/family.csv")
class(family)
head(family)
dim(family)
length(family)
names(family)
str(family)
family=read.csv("~/Desktop/ucberkeley/bcourse/STAT 20/family.csv")
family=read.csv("~/Desktop/uc berkeley/bcourse/STAT 20/family.csv")
family=read.csv("~/Desktop/family.csv")
getwd()
family=read.csv("../Desktop/family.csv")
class(family)
head(family)
dim(family)
length(family)
names(family)
str(family)
typeof(family)
?names
x=data.frame(letters,1:26)
write.csv(x,"letters")
rm(x)
x=read.csv("letters")
x
?rm
filter(family, !overWt)
filter(family, overWt)
arrange(family,age)
arrange(family,age)
select(filter(family, gender =="f"), weight)
library("dplyr")
library("ggplot2")
# Drawing a histogram
# Class intervals are
y=data.frame(class.int=c("0-100","100-200","200-400","400-800","800-1500+"),widths=c(100,100,200,400,700))
View(y)
y=mutate(y,counts=c(94,76,61,38,27)) # Need to collect data
y=mutate(y,percents=counts/sum(counts)*100)
y=mutate(y,heights=percents/widths)
# First an example of not a histogram
ggplot(family, aes(x = height)) + geom_histogram(bins = 5, col = "blue")
# First an example of not a histogram
ggplot(family, aes(x = height)) + geom_histogram(bins = 10, col = "blue")
# First an example of not a histogram
ggplot(family, aes(x = height)) + geom_histogram(binwidth = 10, col = "blue")
# First an example of not a histogram
ggplot(family, aes(x = height)) + geom_histogram(binwidth = 1, col = "blue")
# Now a bunch of historgrams, play with different
a=ggplot(family, aes(x = height, y=..density..))
a + geom_histogram(col = "blue", fill="green")
a + geom_histogram(col = "blue", breaks =c(60,64,66,72,76))
# When you change class intervals, histogram will change a little.
a + geom_histogram(col = "blue", breaks =c(60,62,66,72,76))
a + geom_histogram(col = "blue", binwidth=1)
# First we'll draw an empirical histogram (Ch 3)
sum(sample(6,2,rep=T)) # sum of two die rolls
x=data.frame(x=replicate(100,sum(sample(6,2,rep=T))))
# change number of replications in previous line -
# what happens to histogram below?
ggplot(x,aes(x=x,y=..density..)) + geom_histogram()  # empirical histogram
# Now we'll shift to a probability histogram (Ch 18)
ph=data.frame(x=c(2,3,3,4,4,4,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,8,8,8,8,8,9,9,9,9,10,10,10,11,11,12))
ggplot(ph,aes(x,y=..density..)) + geom_histogram()  # probability histogram
# Normal approx of binomial dist
# binomial answer P(45 to 55 heads inclusive)
# And Normal Approx
pbinom(55,100,.5)-pbinom(44,100,.5)  # exact correct answer
2*pnorm(1.1)-1   # OR
# P(exactly 5 heads in 10 tosses)
# And Normal Approx
dbinom(5,10,.5) # exact answer
2*pnorm((5.5-5)/(sqrt(10)/2))-1  # normal approx
2*pnorm(.3)-1 # best answer from table in text
2*pbinom(.3)-1 # best answer from table in text
pbinom(6,10,.5)-pbinom(4,10,.5)
pbinom(5.5,10,.5)-pbinom(4.5,10,.5)
pbinom(5.1,10,.5)-pbinom(4.9,10,.5)
pbinom(5,10,.5)-pbinom(4.9,10,.5)
pbinom(5,10,.5)-pbinom(4,10,.5)
lord[lord!="e"&lord!="o"]
lord<-c('v','o','l','d','e','m','o','r','t')
lord[lord!="e"&lord!="o"]
lord[lord=='o']
lord[lord!="e"&lord!="o"]
lord[lord%in%c('a','e','i','o','u')]
lord[is.na(lord)]
sum(!is.na(load))
is.na(load)
!is.na(load)
lord<-c('v','o','l','d','e','m','o','r','t',NA)
lord[is.na(lord)]
lord<-c('v','o','l','d',NA,'e','m','o','r','t',NA)
lord[is.na(lord)]
sum(!is.na(load))
!is.na(load)
is.na(load)
?is.na()
lord[TRUE]
lord[lord!="e"&lord!="o"]
lord[lord%in%c('a','e','i','o','u')]
lord[is.na(lord)]
is.na(lord)
!is.na(load)
!is.na(lord)
!is.na(load)
sum(!is.na(load))
sum(!is.na(load))
!is.na(lord)
sum(!is.na(lord))
lord<-c('v','o','l','d','e','m','o','r','t')
lord[is.na(lord)]
is.na(lord)
!is.na(lord)
sum(!is.na(lord))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
age2=nba$age
.2a
.2a<-1:2
.w
.w<2
.w<-2
_www<-2
dat <- read.csv('https://raw.githubusercontent.com/ucb-stat133/stat133-hws/master/data/nba2018-players.csv', stringsAsFactors = FALSE)
attributes(dat)
attributes(dat)
vec <- dat$player
dat <- read.csv('https://raw.githubusercontent.com/ucb-stat133/stat133-hws/master/data/nba2018-players.csv', stringsAsFactors = FALSE,row.names = vec)
first_5rows<-slice(dat,1:5)
first_5rows
attributes(dat)
dat <- read.csv('https://raw.githubusercontent.com/ucb-stat133/stat133-hws/master/data/nba2018-players.csv', stringsAsFactors = FALSE,row.names = F)
dat <- read.csv('https://raw.githubusercontent.com/ucb-stat133/stat133-hws/master/data/nba2018-players.csv', stringsAsFactors = FALSE)
dat$age=20
dat$age=20
a<-dat$age=20
first_5rows<-slice(dat,1:5)
first_5rows
attributes(dat)
print(dat$age=20)
first_5rows<-slice(dat,1:5)
first_5rows
#attributes(dat)
print(dat$age==20)
dat <- read.csv('https://raw.githubusercontent.com/ucb-stat133/stat133-hws/master/data/nba2018-players.csv', stringsAsFactors = FALSE)
first_5rows<-slice(dat,1:5)
first_5rows
#attributes(dat)
print(dat$age==20)
#attributes(dat)
dat[,dat$age==20]
#attributes(dat)
dat[dat$age==20]
#attributes(dat)
dat["age""]
#attributes(dat)
dat["age"]
#attributes(dat)
typeof(dat["age"])
#attributes(dat)
dat["age"]
1:3==1:3&==c(1,3,3)
1:3==1:3&1:3==c(1,3,3)
1:3==1:3&&1:3==c(1,3,3)
1:3==1:3&1:3==c(3,3,3)
lord<-c('v','o','l','d','e','m','o','r','t')
lord[is.na(lord)]
is.na(lord)
!is.na(lord)
sum(!is.na(lord))
lord<-c('v','o','l','d','e','m','o','r','t',NA)
lord[is.na(lord)]
is.na(lord)
!is.na(lord)
sum(!is.na(lord))
knitr::opts_chunk$set(echo = TRUE)
getwd()
getwd()
getwd()
getwd()
getwd()
getwd()
#######################
#title:Make-shots-data-script
#description:Reading the downloaded gsw players csv data files as data frames. Modifying and adding some variables to help following analysis and outputting the summaries of the data.
#input(s):andre-iguodala.csv;draymond-green.csv;kevin-durant.csv;klay-thompson.csv;stephen-curry.csv
#output(s):andre-iguodala-summary.txt;draymond-green-summary.txt;kevin-durant-summary.txt;klay-thompson-summary.txt;stephen-curry-summary.txt
#######################
setwd("~/../Desktop/hw-stat133/workout01/code")
getwd()
library(dplyr)
#reading files
iguodala<-read.csv("../data/andre-iguodala.csv", stringsAsFactors=F)
green<-read.csv("../data/draymond-green.csv", stringsAsFactors=F)
durant<-read.csv("../data/kevin-durant.csv", stringsAsFactors=F)
thompson<-read.csv("../data/klay-thompson.csv", stringsAsFactors=F)
curry<-read.csv("../data/stephen-curry.csv", stringsAsFactors=F)
#add a column name
iguodala$player<-c(rep("Andre Iguodala",nrow(iguodala)))
green$player=c(rep("Draymond Green",nrow(green)))
durant$player=c(rep("Kevin Durant",nrow(durant)))
thompson$player=c(rep("Klay Thompson",nrow(thompson)))
curry$player=c(rep("Stephen Curry",nrow(curry)))
#change the original values of shot-made-flag
##iguodala
n1=iguodala$shot_made_flag[iguodala$shot_made_flag=="n"]
iguodala$shot_made_flag[iguodala$shot_made_flag=="n"]<-c(rep("shot_no",length(n1)))
y1=iguodala$shot_made_flag[iguodala$shot_made_flag=="y"]
iguodala$shot_made_flag[iguodala$shot_made_flag=="y"]<-c(rep("shot_yes",length(y1)))
##green
n2=green$shot_made_flag[green$shot_made_flag=="n"]
green$shot_made_flag[green$shot_made_flag=="n"]<-c(rep("shot_no",length(n2)))
y2=green$shot_made_flag[green$shot_made_flag=="y"]
green$shot_made_flag[green$shot_made_flag=="y"]<-c(rep("shot_yes",length(y2)))
##durant
n3=durant$shot_made_flag[durant$shot_made_flag=="n"]
durant$shot_made_flag[durant$shot_made_flag=="n"]<-c(rep("shot_no",length(n3)))
y3=durant$shot_made_flag[durant$shot_made_flag=="y"]
durant$shot_made_flag[durant$shot_made_flag=="y"]<-c(rep("shot_yes",length(y3)))
##thompson
n4=thompson$shot_made_flag[thompson$shot_made_flag=="n"]
thompson$shot_made_flag[thompson$shot_made_flag=="n"]<-c(rep("shot_no",length(n4)))
y4=thompson$shot_made_flag[thompson$shot_made_flag=="y"]
thompson$shot_made_flag[thompson$shot_made_flag=="y"]<-c(rep("shot_yes",length(y4)))
##curry
n5=curry$shot_made_flag[curry$shot_made_flag=="n"]
curry$shot_made_flag[curry$shot_made_flag=="n"]<-c(rep("shot_no",length(n5)))
y5=curry$shot_made_flag[curry$shot_made_flag=="y"]
curry$shot_made_flag[curry$shot_made_flag=="y"]<-c(rep("shot_yes",length(y5)))
#add a column minite
iguodala$minite=iguodala$period*12-iguodala$minutes_remaining
green$minite=green$period*12-green$minutes_remaining
durant$minite=durant$period*12-durant$minutes_remaining
thompson$minite=thompson$period*12-thompson$minutes_remaining
curry$minite=curry$period*12-curry$minutes_remaining
#output data frames into individual text files
setwd("../output")
sink("andre-iguodala-summary.txt")
summary(iguodala)
sink()
sink("draymond-green-summary.txt")
summary(green)
sink()
sink("kevin-durant-summary.txt")
summary(durant)
sink()
sink("klay-thompson-summary.txt")
summary(thompson)
sink()
sink("stephen-curry-summary.txt")
summary(curry)
sink()
#stack tables into one data frame
shots_data<-rbind(iguodala,green[,],durant[,],thompson[,],curry[,])
#export table as CSV
setwd("../data")
write.csv(shots_data,"shots-data.csv")
#output the summary of shots-data
setwd("../output")
sink("shots-data-summary.txt")
summary(shots_data)
sink()
setwd("../code")
getwd()
setwd("../code")
getwd()
#######################
#title:Make-shots-chart-script
#description:Using the prepared data frame to draw the players' make-shots-chart seperately to pdf files and facetting them to a png file.
#input(s):1)picture: nba-court.jpg 2)data frames:iguodala,green,durant,thompson,curry
#output(s):andre-iguodala-shot-chart.pdf;draymond-green-shot-chart.pdf;kevin-durant-shot-chart.pdf;klay-thompson-shot-chart.pdf;stephen-curry-shot-chart.pdf;gsw-shots-chart.pdf;gsw-shots-chart.png
######################
setwd("../code")
getwd()
library(ggplot2)
library(jpeg)
library(png)
library(grid)
court_file<-"../images/nba-court.jpg"
court_image<-rasterGrob(
readJPEG(court_file),
width=unit(1,"npc"),
height=unit(1,"npc")
)
setwd("../images")
iguodala_scatterplot<-ggplot(iguodala)+
annotation_custom(court_image,-250,250,-50,420)+
geom_point((aes(x=x,y=y,color=shot_made_flag)))+
ylim(-50,420)+
ggtitle(('Shot Chart: Andre Iguodala(2016 season)'))+
theme_minimal()
pdf("andre-iguodala-shot-chart.pdf",width=6.5,height=5)
iguodala_scatterplot
dev.off()
green_scatterplot<-ggplot(green)+
annotation_custom(court_image,-250,250,-50,420)+
geom_point((aes(x=x,y=y,color=shot_made_flag)))+
ylim(-50,420)+
ggtitle(('Shot Chart: Draymond Green(2016 season)'))+
theme_minimal()
pdf("draymond-green-shot-chart.pdf",width=6.5,height=5)
green_scatterplot
dev.off()
durant_scatterplot<-ggplot(durant)+
annotation_custom(court_image,-250,250,-50,420)+
geom_point((aes(x=x,y=y,color=shot_made_flag)))+
ylim(-50,420)+
ggtitle(('Shot Chart: Kevin Durant(2016 season)'))+
theme_minimal()
pdf("kevin-durant-shot-chart.pdf",width=6.5,height=5)
durant_scatterplot
dev.off()
thompson_scatterplot<-ggplot(thompson)+
annotation_custom(court_image,-250,250,-50,420)+
geom_point((aes(x=x,y=y,color=shot_made_flag)))+
ylim(-50,420)+
ggtitle(('Shot Chart: Klay Thompson(2016 season)'))+
theme_minimal()
pdf("klay-thompson-shot-chart.pdf",width=6.5,height=5)
thompson_scatterplot
dev.off()
curry_scatterplot<-ggplot(curry)+
annotation_custom(court_image,-250,250,-50,420)+
geom_point((aes(x=x,y=y,color=shot_made_flag)))+
ylim(-50,420)+
ggtitle(('Shot Chart: Stephen Curry(2016 season)'))+
theme_minimal()
pdf("stephen-curry-shot-chart.pdf",width=6.5,height=5)
curry_scatterplot
dev.off()
shots_scatterplot<-ggplot(shots_data)+
annotation_custom(court_image,-250,250,-50,420)+
geom_point((aes(x=x,y=y,color=shot_made_flag)))+
ylim(-50,420)+
ggtitle(('Shot Chart: GSW(2016 season)'))+
theme_minimal()+
facet_wrap(~player)+
theme(legend.position = "top")
shots_scatterplot
pdf("gsw-shots-chart.pdf",width=8,height=7)
shots_scatterplot
dev.off()
png("gsw-shots-chart.png",width=8,height=7,units = "in",res=500)
shots_scatterplot
dev.off()
setwd("../code")
getwd()
shots_scatterplot<-ggplot(shots_data)+
annotation_custom(court_image,-250,250,-50,420)+
geom_point((aes(x=x,y=y,color=shot_made_flag)))+
ylim(-50,420)+
ggtitle(('Shot Chart: GSW(2016 season)'))+
theme_minimal()+
facet_wrap(~player)+
theme(legend.position = "top")+
theme(legend.title = element_blank())
pdf("gsw-shots-chart.pdf",width=8,height=7)
shots_scatterplot
dev.off()
png("gsw-shots-chart.png",width=8,height=7,units = "in",res=500)
shots_scatterplot
dev.off()
pdf("gsw-shots-chart.pdf",width=8,height=7)
shots_scatterplot
dev.off()
png("gsw-shots-chart.png",width=8,height=7,units = "in",res=500)
shots_scatterplot
dev.off()
setwd("../code")
getwd()
library(ggplot2)
library(jpeg)
library(png)
library(grid)
court_file<-"../images/nba-court.jpg"
court_image<-rasterGrob(
readJPEG(court_file),
width=unit(1,"npc"),
height=unit(1,"npc")
)
setwd("../images")
iguodala_scatterplot<-ggplot(iguodala)+
annotation_custom(court_image,-250,250,-50,420)+
geom_point((aes(x=x,y=y,color=shot_made_flag)))+
ylim(-50,420)+
ggtitle(('Shot Chart: Andre Iguodala(2016 season)'))+
theme_minimal()
pdf("andre-iguodala-shot-chart.pdf",width=6.5,height=5)
iguodala_scatterplot
dev.off()
green_scatterplot<-ggplot(green)+
annotation_custom(court_image,-250,250,-50,420)+
geom_point((aes(x=x,y=y,color=shot_made_flag)))+
ylim(-50,420)+
ggtitle(('Shot Chart: Draymond Green(2016 season)'))+
theme_minimal()
pdf("draymond-green-shot-chart.pdf",width=6.5,height=5)
green_scatterplot
dev.off()
durant_scatterplot<-ggplot(durant)+
annotation_custom(court_image,-250,250,-50,420)+
geom_point((aes(x=x,y=y,color=shot_made_flag)))+
ylim(-50,420)+
ggtitle(('Shot Chart: Kevin Durant(2016 season)'))+
theme_minimal()
pdf("kevin-durant-shot-chart.pdf",width=6.5,height=5)
durant_scatterplot
dev.off()
thompson_scatterplot<-ggplot(thompson)+
annotation_custom(court_image,-250,250,-50,420)+
geom_point((aes(x=x,y=y,color=shot_made_flag)))+
ylim(-50,420)+
ggtitle(('Shot Chart: Klay Thompson(2016 season)'))+
theme_minimal()
pdf("klay-thompson-shot-chart.pdf",width=6.5,height=5)
thompson_scatterplot
dev.off()
curry_scatterplot<-ggplot(curry)+
annotation_custom(court_image,-250,250,-50,420)+
geom_point((aes(x=x,y=y,color=shot_made_flag)))+
ylim(-50,420)+
ggtitle(('Shot Chart: Stephen Curry(2016 season)'))+
theme_minimal()
pdf("stephen-curry-shot-chart.pdf",width=6.5,height=5)
curry_scatterplot
dev.off()
shots_scatterplot<-ggplot(shots_data)+
annotation_custom(court_image,-250,250,-50,420)+
geom_point((aes(x=x,y=y,color=shot_made_flag)))+
ylim(-50,420)+
ggtitle(('Shot Chart: GSW(2016 season)'))+
theme_minimal()+
facet_wrap(~player)+
theme(legend.position = "top")+
theme(legend.title = element_blank())
shots_scatterplot
pdf("gsw-shots-chart.pdf",width=8,height=7)
shots_scatterplot
dev.off()
png("gsw-shots-chart.png",width=8,height=7,units = "in",res=500)
shots_scatterplot
dev.off()
setwd("../code")
knitr::opts_chunk$set(echo = TRUE)
setwd("../report")
arrange(summarise(group_by(shots_data,player),total=sum(shot_made_flag=="shot_yes"|shot_made_flag=="shot_no"),made=sum(shot_made_flag=="shot_yes"),perc_made=made/total),desc(perc_made))
library(dplyr)
pt2<-filter(shots_data,shots_data$shot_type=="2PT Field Goal")
arrange(summarise(group_by(pt2,player),total=sum(shot_made_flag=="shot_yes"|shot_made_flag=="shot_no"),made=sum(shot_made_flag=="shot_yes"),perc_made=made/total),desc(perc_made))
pt3<-filter(shots_data,shots_data$shot_type=="3PT Field Goal")
arrange(summarise(group_by(pt3,player),total=sum(shot_made_flag=="shot_yes"|shot_made_flag=="shot_no"),made=sum(shot_made_flag=="shot_yes"),perc_made=made/total),desc(perc_made))
